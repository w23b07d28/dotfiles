#!/bin/sh

mod="Mod4"

riverctl map normal $mod D spawn bemenu-run
riverctl map normal $mod+Shift Return spawn footclient

# Mod+Q to close the focused view
riverctl map normal $mod+Shift Q close

# Mod+J and Mod+K to focus the next/previous view in the layout stack
riverctl map normal $mod K focus-view next
riverctl map normal $mod I focus-view previous

riverctl map normal $mod J send-layout-cmd rivertile "main-ratio -0.05"
riverctl map normal $mod L send-layout-cmd rivertile "main-ratio +0.05"

riverctl map normal $mod+Shift K swap next
riverctl map normal $mod+Shift I swap previous

riverctl map normal $mod+Shift J send-layout-cmd rivertile "main-count +1"
riverctl map normal $mod+Shift L send-layout-cmd rivertile "main-count -1"

riverctl map normal $mod+Mod1 J move left 100
riverctl map normal $mod+Mod1 K move down 100
riverctl map normal $mod+Mod1 I move up 100
riverctl map normal $mod+Mod1 L move right 100

riverctl map normal $mod+Mod1+Shift J resize horizontal -100
riverctl map normal $mod+Mod1+Shift K resize vertical 100
riverctl map normal $mod+Mod1+Shift I resize vertical -100
riverctl map normal $mod+Mod1+Shift L resize horizontal 100

# Mod+Period and Mod+Comma to focus the next/previous output
riverctl map normal $mod Period focus-output next
riverctl map normal $mod Comma focus-output previous

# Mod+Shift+{Period,Comma} to send the focused view to the next/previous output
riverctl map normal $mod+Shift Period send-to-output next
riverctl map normal $mod+Shift Comma send-to-output previous

# Mod+Return to bump the focused view to the top of the layout stack
riverctl map normal $mod Return zoom

# Mod + Left Mouse Button to move views
riverctl map-pointer normal $mod BTN_LEFT move-view

# Mod + Right Mouse Button to resize views
riverctl map-pointer normal $mod BTN_RIGHT resize-view

for i in $(seq 1 9)
do
    tags=$((1 << ($i - 1)))

    # Mod+[1-9] to focus tag [0-8]
    riverctl map normal $mod $i set-focused-tags $tags

    # Mod+Shift+[1-9] to tag focused view with tag [0-8]
    riverctl map normal $mod+Shift $i set-view-tags $tags

    # Mod+Ctrl+[1-9] to toggle focus of tag [0-8]
    riverctl map normal $mod+Control $i toggle-focused-tags $tags

    # Mod+Shift+Ctrl+[1-9] to toggle tag [0-8] of focused view
    riverctl map normal $mod+Shift+Control $i toggle-view-tags $tags
done

# Mod+0 to focus all tags
# Mod+Shift+0 to tag focused view with all tags
all_tags=$(((1 << 32) - 1))
riverctl map normal $mod 0 set-focused-tags $all_tags
riverctl map normal $mod+Shift 0 set-view-tags $all_tags

# Mod+Space to toggle float
riverctl map normal $mod Space toggle-float

# Mod+F to toggle fullscreen
riverctl map normal $mod F toggle-fullscreen

# Mod+{Up,Right,Down,Left} to change layout orientation
riverctl map normal $mod Up    send-layout-cmd rivertile "main-location top"
riverctl map normal $mod Right send-layout-cmd rivertile "main-location right"
riverctl map normal $mod Down  send-layout-cmd rivertile "main-location bottom"
riverctl map normal $mod Left  send-layout-cmd rivertile "main-location left"

# Declare a passthrough mode. This mode has only a single mapping to return to
# normal mode. This makes it useful for testing a nested wayland compositor
riverctl declare-mode passthrough

# Mod+F11 to enter passthrough mode
riverctl map normal $mod F11 enter-mode passthrough

# Mod+F11 to return to normal mode
riverctl map passthrough $mod F11 enter-mode normal

# Various media key mapping examples for both normal and locked mode which do
# not have a modifier
for mode in normal locked
do
    # Eject the optical drive (well if you still have one that is)
    riverctl map $mode None XF86Eject spawn 'eject -T'

    # Control pulse audio volume with pamixer (https://github.com/cdemoulins/pamixer)
    riverctl map $mode None XF86AudioRaiseVolume  spawn 'pamixer -i 5'
    riverctl map $mode None XF86AudioLowerVolume  spawn 'pamixer -d 5'
    riverctl map $mode None XF86AudioMute         spawn 'pamixer --toggle-mute'

    # Control MPRIS aware media players with playerctl (https://github.com/altdesktop/playerctl)
    riverctl map $mode None XF86AudioMedia spawn 'playerctl play-pause'
    riverctl map $mode None XF86AudioPlay  spawn 'playerctl play-pause'
    riverctl map $mode None XF86AudioPrev  spawn 'playerctl previous'
    riverctl map $mode None XF86AudioNext  spawn 'playerctl next'

    # Control screen backlight brighness with light (https://github.com/haikarainen/light)
    riverctl map $mode None XF86MonBrightnessUp   spawn 'light -A 5'
    riverctl map $mode None XF86MonBrightnessDown spawn 'light -U 5'
done

# Set background and border color
riverctl background-color 0x000000
riverctl border-color-focused 0x1f272e
riverctl border-color-unfocused 0x000000
riverctl border-width 2

riverctl map-pointer normal Mod4 BTN_LEFT move-view
riverctl map-pointer normal Mod4 BTN_RIGHT resize-view
riverctl focus-follow-cursor always
riverctl set-cursor-warp disable

# Set keyboard repeat rate--
riverctl set-repeat 50 300

# Make certain views start floating
riverctl float-filter-add app-id float
riverctl float-filter-add title "popup title with spaces"

# Set app-ids and titles of views which should use client side decorations
riverctl csd-filter-add app-id "luakit"

riverctl spawn "foot --server"
riverctl spawn "yambar"
riverctl spawn "pipewire"
# riverctl xcursor-theme tarazed
# gsettings set org.gnome.desktop.interface gtk-theme Adwaita
# gsettings set org.gnome.desktop.interface icon-theme Breeze
# gsettings set org.gnome.desktop.wm.preferences button-layout " "
# gsettings set org.gnome.desktop.interface cursor-theme tarazed

riverctl default-layout rivertile
exec rivertile -view-padding 0 -outer-padding 0
